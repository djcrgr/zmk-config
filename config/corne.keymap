/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
                        bindings = <
   &kp GRAVE  &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp LBKT
   &kp ESC  &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp BSLH &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RBKT
                  &lt 2 TAB &mt LSFT SPACE &lt 1 DEL   &lt 1 BSPC &mt RSFT RET &lt 2 TAB
                        >;
                };

                lower_layer {
// -----------------------------------------------------------------------------------------
                        bindings = <
   &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT &kp CARET &kp AMPS &kp STAR   &kp LPAR &kp RPAR    &kp UNDER &kp PLUS
   &kp N1   &kp N2 &kp N2   &kp N3   &kp N4    &kp N5    &kp N6   &kp N7 &kp N8 &kp N9 &kp N0 &kp MINUS &kp EQUAL
   &trans   &trans &trans   &trans   &trans    &trans    &trans   &trans   &trans &trans    &trans &trans
                          	        &trans &trans       &trans &trans &trans   &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
                        bindings = <
   &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
   &trans &trans &kp C_PREV &kp C_PP &kp C_NEXT &kp C_VOL_UP &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &kp PSCRN
   &kp LS(LCTRL) &kp INS &trans &trans &kp C_MUTE &kp C_VOL_DN &kp HOME &kp PG_DN &kp PG_UP &kp END &trans &kp SLCK
                          	        &trans &trans       &trans &trans &trans   &trans
                        >;
                };
                
                adjust_layer {
// -----------------------------------------------------------------------------------------
                        bindings = <
   &reset &bootloader &trans &trans &trans &trans       &trans &trans &trans &trans &bootloader &reset
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4  &bt BT_SEL 4 &bt BT_SEL 3 &bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0 &bt BT_CLR
   &out OUT_BLE &out OUT_USB &trans &trans &trans &trans        &trans &trans &trans &trans &out OUT_USB &out OUT_BLE
                          	        &trans &trans       &trans &trans &trans   &trans
                        >;
                };
        };
};
